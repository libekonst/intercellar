[{"/Users/kostas/Projects/intercellar/src/index.tsx":"1","/Users/kostas/Projects/intercellar/src/reportWebVitals.ts":"2","/Users/kostas/Projects/intercellar/src/App.tsx":"3","/Users/kostas/Projects/intercellar/src/state.ts":"4","/Users/kostas/Projects/intercellar/src/taproom/Serving.ts":"5","/Users/kostas/Projects/intercellar/src/taproom/BeerTap.tsx":"6","/Users/kostas/Projects/intercellar/src/utils/utils.ts":"7","/Users/kostas/Projects/intercellar/src/static/strings.ts":"8","/Users/kostas/Projects/intercellar/src/progress/GameProgress.tsx":"9","/Users/kostas/Projects/intercellar/src/progress/VictoryView.tsx":"10","/Users/kostas/Projects/intercellar/src/taproom/ServingsHub.tsx":"11","/Users/kostas/Projects/intercellar/src/ui-kit/AppScaffold.tsx":"12","/Users/kostas/Projects/intercellar/src/settings/Ticker.ts":"13","/Users/kostas/Projects/intercellar/src/ui-kit/Absolute.tsx":"14","/Users/kostas/Projects/intercellar/src/ui-kit/Layout.tsx":"15","/Users/kostas/Projects/intercellar/src/customers/Difficulty.ts":"16","/Users/kostas/Projects/intercellar/src/customers/CustomersHub.tsx":"17","/Users/kostas/Projects/intercellar/src/customers/damager/damage-strategies.ts":"18","/Users/kostas/Projects/intercellar/src/customers/damager/Damager.ts":"19","/Users/kostas/Projects/intercellar/src/customers/damager/createDynamicIntervalEmitter.ts":"20","/Users/kostas/Projects/intercellar/src/customers/ProgressDamage.tsx":"21","/Users/kostas/Projects/intercellar/src/customers/pubCrawl.ts":"22"},{"size":511,"mtime":1613866032449,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1607207029854,"results":"25","hashOfConfig":"24"},{"size":3940,"mtime":1618747578791,"results":"26","hashOfConfig":"24"},{"size":3979,"mtime":1618746206509,"results":"27","hashOfConfig":"24"},{"size":589,"mtime":1613866667937,"results":"28","hashOfConfig":"24"},{"size":1346,"mtime":1613866715978,"results":"29","hashOfConfig":"24"},{"size":995,"mtime":1618687515608,"results":"30","hashOfConfig":"24"},{"size":386,"mtime":1614518550131,"results":"31","hashOfConfig":"24"},{"size":1005,"mtime":1618700225256,"results":"32","hashOfConfig":"24"},{"size":2342,"mtime":1613866793921,"results":"33","hashOfConfig":"24"},{"size":1974,"mtime":1613866667937,"results":"34","hashOfConfig":"24"},{"size":753,"mtime":1614518516068,"results":"35","hashOfConfig":"24"},{"size":2114,"mtime":1614520593606,"results":"36","hashOfConfig":"24"},{"size":371,"mtime":1614516237746,"results":"37","hashOfConfig":"24"},{"size":783,"mtime":1618688252999,"results":"38","hashOfConfig":"24"},{"size":77,"mtime":1618736247824,"results":"39","hashOfConfig":"24"},{"size":3290,"mtime":1618747458666,"results":"40","hashOfConfig":"24"},{"size":892,"mtime":1618736247870,"results":"41","hashOfConfig":"24"},{"size":447,"mtime":1618698937790,"results":"42","hashOfConfig":"24"},{"size":790,"mtime":1618688197259,"results":"43","hashOfConfig":"24"},{"size":3248,"mtime":1618798697328,"results":"44","hashOfConfig":"24"},{"size":1192,"mtime":1618747211131,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"64gq1g",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/kostas/Projects/intercellar/src/index.tsx",[],["93","94"],"/Users/kostas/Projects/intercellar/src/reportWebVitals.ts",[],"/Users/kostas/Projects/intercellar/src/App.tsx",[],"/Users/kostas/Projects/intercellar/src/state.ts",[],"/Users/kostas/Projects/intercellar/src/taproom/Serving.ts",[],"/Users/kostas/Projects/intercellar/src/taproom/BeerTap.tsx",[],"/Users/kostas/Projects/intercellar/src/utils/utils.ts",[],"/Users/kostas/Projects/intercellar/src/static/strings.ts",[],"/Users/kostas/Projects/intercellar/src/progress/GameProgress.tsx",[],"/Users/kostas/Projects/intercellar/src/progress/VictoryView.tsx",["95","96","97"],"import React, { useMemo, useRef, useState } from \"react\";\nimport {\n  useSpring,\n  animated,\n  config,\n  useChain,\n  useTransition,\n  useSprings,\n} from \"react-spring\";\nimport { Strings } from \"../static/strings\";\nimport {\n  getRandomInt,\n  getRandomPosition,\n  getScreenCenterPosition,\n  id,\n} from \"../utils/utils\";\nimport \"./VictoryView.css\";\n\ntype Props = {\n  onPlayAgain: () => void;\n};\nexport function VictoryView({ onPlayAgain }: Props) {\n  const [backdropProps] = useSpring(() => ({\n    from: { opacity: 0, transform: \"scale(1)\" },\n    to: { opacity: 1, transform: \"scale(1)\" },\n  }));\n\n  const buttonRef = useRef<any>();\n  const [buttonProps] = useSpring(() => ({\n    from: { transform: \"scale(0)\" },\n    to: { transform: \"scale(1)\" },\n    ref: buttonRef,\n  }));\n\n  const titleRef = useRef<any>();\n  const [titleProps] = useSpring(() => ({\n    from: { transform: \"translateY(100px) scale(0)\" },\n    to: { transform: \"translateY(0) scale(1)\" },\n    config: config.stiff,\n    ref: titleRef,\n  }));\n\n  const confettiItems = useMemo(createConfetti, []);\n  const confetti = useTransition(confettiItems, (item) => item.id, {\n    from: () => ({\n      opacity: 0,\n      transform: \"scale(0) rotate(0turn)\",\n      position: \"absolute\",\n      ...getScreenCenterPosition(),\n    }),\n    // use fn to have a unique position for each element\n    enter: () => ({\n      opacity: 1,\n      transform: `scale(1) rotate(${Math.random() * 2}turn)`,\n      ...getRandomPosition(),\n    }),\n    // leave: { opacity: 0, transform: \"scale(0.8)\" },\n    config: config.wobbly,\n    trail: 20,\n  });\n\n  useChain([titleRef, buttonRef]);\n\n  return (\n    <>\n      <animated.div style={backdropProps} className=\"backdrop\">\n        {confetti.map(({ item, props }) => (\n          <animated.div style={props} key={item.id}>\n            <animated.div className=\"confetti\">ðŸŽ‰</animated.div>\n          </animated.div>\n        ))}\n        <animated.div style={titleProps} className=\"victory-label\">\n          {Strings.VICTORY_LABEL}\n        </animated.div>\n        <animated.div\n          style={buttonProps}\n          className=\"victory-button\"\n          onClick={onPlayAgain}\n        >\n          {Strings.PLAY_AGAIN_BTN}\n        </animated.div>\n      </animated.div>\n    </>\n  );\n}\n\nconst createConfetti = () =>\n  Array(22)\n    .fill(null)\n    .map(() => ({ id: id() }));\n","/Users/kostas/Projects/intercellar/src/taproom/ServingsHub.tsx",[],"/Users/kostas/Projects/intercellar/src/ui-kit/AppScaffold.tsx",[],"/Users/kostas/Projects/intercellar/src/settings/Ticker.ts",[],"/Users/kostas/Projects/intercellar/src/ui-kit/Absolute.tsx",[],"/Users/kostas/Projects/intercellar/src/ui-kit/Layout.tsx",[],"/Users/kostas/Projects/intercellar/src/customers/Difficulty.ts",[],"/Users/kostas/Projects/intercellar/src/customers/CustomersHub.tsx",["98","99","100"],"import {\n  Persona as PersonaTile,\n  PersonaInitialsColor,\n  PersonaSize\n} from '@fluentui/react';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { animated, config, useTransition } from 'react-spring';\nimport { Difficulty } from './Difficulty';\nimport { id } from '../utils/utils';\nimport { Absolute } from '../ui-kit/Absolute';\nimport { Damager } from './damager/Damager';\nimport {\n  LowDamageStrategy,\n  HardDamageStrategy,\n  MediumDamageStrategy,\n  SteadyLowDamageStrategy,\n  PubCrawlDamageStrategy\n} from './damager/damage-strategies';\nimport { Column } from '../ui-kit/Layout';\nimport { ProgressDamage } from './ProgressDamage';\n\ntype Props = {\n  difficulty: Difficulty;\n  onAddCustomers: (amount: number) => void;\n  onChangeDifficulty: (difficulty: Difficulty) => void;\n  gameRunning?: boolean;\n  customers: number;\n  onChangeCountdown: (v: number) => void;\n};\nexport function CustomersHub(props: Props) {\n  const {\n    difficulty,\n    onAddCustomers,\n    gameRunning,\n    onChangeDifficulty,\n    customers,\n    onChangeCountdown\n  } = props;\n\n  const [personasUI, setPersonasUI] = useState<Persona[]>([]);\n  const addPersonaUI = useCallback(\n    () => setPersonasUI((state) => [...state, new Persona()]),\n    []\n  );\n  const removePersonaUI = useCallback(\n    (p: Persona) => setPersonasUI((s) => s.filter((it) => it.id !== p.id)),\n    []\n  );\n\n  const firstRender = useRef(true);\n  useEffect(() => {\n    if (firstRender.current) firstRender.current = false;\n    else addPersonaUI();\n  }, [addPersonaUI, customers]);\n\n  const transitionPersonas = useTransition(personasUI, (p) => p.id, {\n    from: {\n      opacity: 0.5,\n      transform: 'translate(5px, 15px) scale(0.5)'\n    },\n    enter: {\n      transform: 'translate(0px, 15px) scale(1)',\n      opacity: 1\n    },\n    leave: {\n      transform: 'translate(0px, 0px) scale(1)',\n      opacity: 0\n    },\n\n    config: config.stiff,\n    // @ts-ignore works, error in types\n    onRest: removePersonaUI\n  });\n\n  return (\n    <ProgressDamage\n      onDamageInflicted={(damage) => onAddCustomers(damage)}\n      difficulty={difficulty}\n      gameRunning={gameRunning}\n      onChangeDifficulty={onChangeDifficulty}\n      setCountdown={onChangeCountdown}>\n      <Absolute right={0} top={45}>\n        <Column>\n          {transitionPersonas.map(({ item, props, key, state }) => (\n            <animated.div key={item.id} style={{ ...props }}>\n              <PersonaTile\n                size={PersonaSize.size24}\n                initialsColor={PersonaInitialsColor.orange}\n              />\n            </animated.div>\n          ))}\n        </Column>\n      </Absolute>\n    </ProgressDamage>\n  );\n}\n\n// type Persona = { id: string };\n// const createPersona = (): Persona => ({ id: id() });\n\nclass Persona {\n  readonly id = id();\n}\n\nconst chooseDamageStrategy = (difficulty: Difficulty) => {\n  if (difficulty === Difficulty.BEGINNER) return new SteadyLowDamageStrategy();\n  if (difficulty === Difficulty.EASY) return new LowDamageStrategy();\n  if (difficulty === Difficulty.NORMAL) return new MediumDamageStrategy();\n  if (difficulty === Difficulty.HARD) return new HardDamageStrategy();\n  if (difficulty === Difficulty.PUB_CRAWL) return new PubCrawlDamageStrategy();\n  else return new LowDamageStrategy();\n};\n","/Users/kostas/Projects/intercellar/src/customers/damager/damage-strategies.ts",[],"/Users/kostas/Projects/intercellar/src/customers/damager/Damager.ts",[],"/Users/kostas/Projects/intercellar/src/customers/damager/createDynamicIntervalEmitter.ts",[],"/Users/kostas/Projects/intercellar/src/customers/ProgressDamage.tsx",["101","102","103","104","105"],"/Users/kostas/Projects/intercellar/src/customers/pubCrawl.ts",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":34,"nodeType":"112","messageId":"113","endLine":1,"endColumn":42},{"ruleId":"110","severity":1,"message":"114","line":8,"column":3,"nodeType":"112","messageId":"113","endLine":8,"endColumn":13},{"ruleId":"110","severity":1,"message":"115","line":12,"column":3,"nodeType":"112","messageId":"113","endLine":12,"endColumn":15},{"ruleId":"110","severity":1,"message":"116","line":6,"column":41,"nodeType":"112","messageId":"113","endLine":6,"endColumn":48},{"ruleId":"110","severity":1,"message":"117","line":11,"column":10,"nodeType":"112","messageId":"113","endLine":11,"endColumn":17},{"ruleId":"110","severity":1,"message":"118","line":104,"column":7,"nodeType":"112","messageId":"113","endLine":104,"endColumn":27},{"ruleId":"110","severity":1,"message":"119","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":15},{"ruleId":"110","severity":1,"message":"120","line":3,"column":10,"nodeType":"112","messageId":"113","endLine":3,"endColumn":15},{"ruleId":"110","severity":1,"message":"121","line":3,"column":17,"nodeType":"112","messageId":"113","endLine":3,"endColumn":26},{"ruleId":"110","severity":1,"message":"122","line":3,"column":28,"nodeType":"112","messageId":"113","endLine":3,"endColumn":32},{"ruleId":"123","severity":1,"message":"124","line":84,"column":6,"nodeType":"125","endLine":84,"endColumn":53,"suggestions":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useSprings' is defined but never used.","'getRandomInt' is defined but never used.","'useMemo' is defined but never used.","'Damager' is defined but never used.","'chooseDamageStrategy' is assigned a value but never used.","'timer' is defined but never used.","'mapTo' is defined but never used.","'switchMap' is defined but never used.","'take' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'difficulty'. Either include it or remove the dependency array.","ArrayExpression",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [difficulty, gameRunning, onChangeDifficulty, setCountdown]",{"range":"132","text":"133"},[2691,2738],"[difficulty, gameRunning, onChangeDifficulty, setCountdown]"]